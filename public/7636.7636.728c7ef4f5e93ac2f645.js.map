{"version":3,"file":"7636.7636.728c7ef4f5e93ac2f645.js","mappings":"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","sources":["webpack://my-new-custom-application-project/./src/constants.js","webpack://my-new-custom-application-project/./src/components/channel-details/conversions.js","webpack://my-new-custom-application-project/./src/components/channel-details/constants.js","webpack://my-new-custom-application-project/./src/components/channel-details/validate.js","webpack://my-new-custom-application-project/./src/components/channel-details/messages.js","webpack://my-new-custom-application-project/./src/components/channel-details/channel-details-form.jsx","webpack://my-new-custom-application-project/./src/components/channel-details/transform-errors.js","webpack://my-new-custom-application-project/./src/components/channel-details/channel-details.jsx"],"sourcesContent":["// Make sure to import the helper functions from the `ssr` entry point.\nimport { entryPointUriPathToPermissionKeys } from '@commercetools-frontend/application-shell/ssr';\n\nexport const entryPointUriPath = 'custom-applications';\n\nexport const PERMISSIONS = entryPointUriPathToPermissionKeys(entryPointUriPath);\n","import LocalizedTextInput from '@commercetools-uikit/localized-text-input';\r\nimport { transformLocalizedFieldToLocalizedString } from '@commercetools-frontend/l10n';\r\n\r\nexport const docToFormValues = (channel, languages) => ({\r\n  key: channel?.key ?? '',\r\n  roles: channel?.roles ?? [],\r\n  venues: channel?.venues?? [],\r\n  deliveryCountries: channel?.deliveryCountries?? [],\r\n  name: LocalizedTextInput.createLocalizedString(\r\n    languages,\r\n    transformLocalizedFieldToLocalizedString(channel?.nameAllLocales ?? [])\r\n  ),\r\n});\r\n\r\nexport const formValuesToDoc = (formValues) => ({\r\n  key: formValues.key,\r\n  roles: formValues.roles,\r\n  venues: formValues.venues,\r\n  deliveryCountries: formValues.deliveryCountries,\r\n  name: LocalizedTextInput.omitEmptyTranslations(formValues.name),\r\n});\r\n","// https://docs.commercetools.com/api/projects/channels#channelroleenum\r\nexport const CHANNEL_ROLES = {\r\n  inventorySupply: 'InventorySupply',\r\n  productDistribution: 'ProductDistribution',\r\n  orderExport: 'OrderExport',\r\n  orderImport: 'OrderImport',\r\n  primary: 'Primary',\r\n};\r\n\r\nexport const CHANNEL_Venues = {\r\n  atlantis:\"Atlantis\",\r\n  atthetop:\"Atthetop\",\r\n  ferrariWorld:\"FerrariWorld\",\r\n  warnerBros:\"WarnerBros\"\r\n};\r\n\r\nexport const CHANNEL_DeliveryCountries = {\r\n  afganistan:\"Afganistan\",\r\n  india:\"India\",\r\n  france:\"France\",\r\n  canada:\"Canada\"\r\n};\r\n\r\nexport const CHANNEL_CategoryName = {\r\n  man:\"Man\",\r\n  women:\"Women\",\r\n  top:\"Top\",\r\n  shoes:\"Shoes\"\r\n};\r\n\r\nexport const  CHANNEL_CategoryID  = {\r\n  newshows:\"Newshows\",\r\n  oldshoes:\"Oldshoes\",\r\n  brandnew:\"Brandnew\",\r\n  newarrivals:\"Newarrivals\"\r\n};\r\n","import TextInput from '@commercetools-uikit/text-input';\r\nimport omitEmpty from 'omit-empty-es';\r\n\r\nconst validate = (formikValues) => {\r\n  const errors = {\r\n    key: {},\r\n    roles: {},\r\n  };\r\n\r\n  if (TextInput.isEmpty(formikValues.key)) {\r\n    errors.key.missing = true;\r\n  }\r\n  if (Array.isArray(formikValues.roles) && formikValues.roles.length === 0) {\r\n    errors.roles.missing = true;\r\n  }\r\n  return omitEmpty(errors);\r\n};\r\n\r\nexport default validate;\r\n","import { defineMessages } from 'react-intl';\r\n\r\nexport default defineMessages({\r\n  backToChannelsList: {\r\n    id: 'ChannelDetails.backToChannelsList',\r\n    defaultMessage: 'Back to channels list',\r\n  },\r\n  duplicateKey: {\r\n    id: 'ChannelDetails.duplicateKey',\r\n    defaultMessage: 'A channel with this key already exists.',\r\n  },\r\n  channelUpdated: {\r\n    id: 'ChannelDetails.channelUpdated',\r\n    defaultMessage: 'Channel {channelName} updated',\r\n  },\r\n  channelKeyLabel: {\r\n    id: 'ChannelDetails.channelKeyLabel',\r\n    defaultMessage: 'Channel key',\r\n  },\r\n  channelNameLabel: {\r\n    id: 'ChannelDetails.channelNameLabel',\r\n    defaultMessage: 'Channel name',\r\n  },\r\n  channelRolesLabel: {\r\n    id: 'ChannelDetails.channelRolesLabel',\r\n    defaultMessage: 'Channel roles',\r\n  },\r\n\r\n  channelVenuesLabel: {\r\n    id: 'ChannelDetails.channelVenuesLabel',\r\n    defaultMessage: 'Venues',\r\n  },\r\n \r\n  channelDeliveryCountriesLabel: {\r\n    id: 'ChannelDetails.channelDeliveryCountriesLabel',\r\n    defaultMessage: 'DeliveryCountries',\r\n  },\r\n\r\n  channelCategoryNameLabel: {\r\n    id: 'ChannelDetails.channelCategoryNameLabel',\r\n    defaultMessage: 'CategoryName',\r\n  },\r\n\r\n  channelCategoryIDLabel: {\r\n    id: 'ChannelDetails.channelCategoryIDLabel',\r\n    defaultMessage: 'CategoryID',\r\n  },\r\n\r\n  hint: {\r\n    id: 'ChannelDetails.hint',\r\n    defaultMessage:\r\n      'This page demonstrates for instance how to use forms, notifications and how to update data using GraphQL, etc.',\r\n  },\r\n  modalTitle: {\r\n    id: 'ChannelDetails.modalTitle',\r\n    defaultMessage: 'Edit channel',\r\n  },\r\n  channelDetailsErrorMessage: {\r\n    id: 'ChannelDetails.errorMessage',\r\n    defaultMessage:\r\n      'We were unable to fetch the channel details. Please check your connection, the provided channel ID and try again.',\r\n  },\r\n});\r\n","import PropTypes from 'prop-types';\r\nimport { useFormik } from 'formik';\r\nimport { useIntl } from 'react-intl';\r\nimport LocalizedTextField from '@commercetools-uikit/localized-text-field';\r\nimport TextField from '@commercetools-uikit/text-field';\r\nimport Spacings from '@commercetools-uikit/spacings';\r\nimport SelectField from '@commercetools-uikit/select-field';\r\nimport { CHANNEL_ROLES } from './constants';\r\nimport { CHANNEL_Venues } from './constants';\r\nimport { CHANNEL_DeliveryCountries } from './constants';\r\nimport { CHANNEL_CategoryName } from './constants';\r\nimport {CHANNEL_CategoryID} from './constants';\r\nimport validate from './validate';\r\nimport messages from './messages';\r\n\r\nconst getRoleOptions = Object.keys(CHANNEL_ROLES).map((key) => ({\r\n  label: CHANNEL_ROLES[key],\r\n  value: CHANNEL_ROLES[key],\r\n}));\r\n\r\nconst getVenuesOptions = Object.keys(CHANNEL_Venues).map((key) => ({\r\n  label: CHANNEL_Venues[key],\r\n  value: CHANNEL_Venues[key],\r\n}));\r\n\r\nconst getDeliveryCountriesOptions = Object.keys(CHANNEL_DeliveryCountries).map((key) => ({\r\n  label:CHANNEL_DeliveryCountries[key],\r\n  value: CHANNEL_DeliveryCountries[key],\r\n}));\r\n\r\nconst getCategoryNameOptions = Object.keys(CHANNEL_CategoryName).map((key) => ({\r\n  label: CHANNEL_CategoryName[key],\r\n  value: CHANNEL_CategoryName[key],\r\n}));\r\n\r\nconst getCategoryIDOptions = Object.keys(CHANNEL_CategoryID).map((key) => ({\r\n  label: CHANNEL_CategoryID[key],\r\n  value: CHANNEL_CategoryID[key],\r\n}));\r\n\r\n\r\nconst ChannelDetailsForm = (props) => {\r\n  const intl = useIntl();\r\n  const formik = useFormik({\r\n    initialValues: props.initialValues,\r\n    onSubmit: props.onSubmit,\r\n    validate,\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  const formElements = (\r\n    <Spacings.Stack scale=\"l\">\r\n\r\n      \r\n      <TextField\r\n        name=\"key\"\r\n        title={intl.formatMessage(messages.channelKeyLabel)}\r\n        value={formik.values.key}\r\n        errors={formik.errors.key}\r\n        touched={formik.touched.key}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        isReadOnly={props.isReadOnly}\r\n        renderError={(errorKey) => {\r\n          if (errorKey === 'duplicate') {\r\n            return intl.formatMessage(messages.duplicateKey);\r\n          }\r\n          return null;\r\n        }}\r\n        isRequired\r\n        horizontalConstraint={10}\r\n      />\r\n   \r\n          \r\n\r\n      <LocalizedTextField\r\n        name=\"name\"\r\n        title={intl.formatMessage(messages.channelNameLabel)}\r\n        value={formik.values.name}\r\n        errors={formik.errors.name}\r\n        touched={Boolean(formik.touched.name)}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        selectedLanguage={props.dataLocale}\r\n        isReadOnly={props.isReadOnly}\r\n        horizontalConstraint={10}\r\n      />\r\n      \r\n      <SelectField\r\n        name=\"roles\"\r\n        title={intl.formatMessage(messages.channelRolesLabel)}\r\n        value={formik.values.roles}\r\n        errors={formik.errors.roles}\r\n        touched={formik.touched.roles}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        isMulti\r\n        options={getRoleOptions}\r\n        isReadOnly={props.isReadOnly}\r\n        isRequired\r\n        horizontalConstraint={15}\r\n      />\r\n      \r\n      <SelectField\r\n        name=\"venues\"\r\n        title={intl.formatMessage(messages.channelVenuesLabel)}\r\n        value={formik.values.venues}\r\n        errors={formik.errors.venues}\r\n        touched={formik.touched.venues}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        isMulti\r\n        options={getVenuesOptions}\r\n        isReadOnly={props.isReadOnly}\r\n        isRequired\r\n        horizontalConstraint={10}\r\n      />\r\n\r\n<SelectField\r\n        name=\"deliveryCountries\"\r\n        title={intl.formatMessage(messages.channelDeliveryCountriesLabel)}\r\n        value={formik.values.deliveryCountries}\r\n        errors={formik.errors.deliveryCountries}\r\n        touched={formik.touched.deliveryCountries}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        isMulti\r\n        options={getDeliveryCountriesOptions}\r\n        isReadOnly={props.isReadOnly}\r\n        isRequired\r\n        horizontalConstraint={10}\r\n      />\r\n\r\n<SelectField\r\n        name=\"categoryName\"\r\n        title={intl.formatMessage(messages.channelCategoryNameLabel)}\r\n        value={formik.values.categoryName}\r\n        errors={formik.errors.categoryName}\r\n        touched={formik.touched.categoryName}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        isMulti\r\n        options={getCategoryNameOptions}\r\n        isReadOnly={props.isReadOnly}\r\n        isRequired\r\n        horizontalConstraint={10}\r\n      />\r\n\r\n<SelectField\r\n        name=\"categoryID\"\r\n        title={intl.formatMessage(messages.channelCategoryIDLabel)}\r\n        value={formik.values.categoryID}\r\n        errors={formik.errors.categoryID}\r\n        touched={formik.touched.categoryID}\r\n        onChange={formik.handleChange}\r\n        onBlur={formik.handleBlur}\r\n        isMulti\r\n        options={getCategoryIDOptions}\r\n        isReadOnly={props.isReadOnly}\r\n        isRequired\r\n        horizontalConstraint={10}\r\n      />\r\n\r\n\r\n\r\n    </Spacings.Stack>\r\n  );\r\n\r\n  return props.children({\r\n    formElements,\r\n    values: formik.values,\r\n    isDirty: formik.dirty,\r\n    \r\n    isSubmitting: formik.isSubmitting,\r\n    submitForm: formik.handleSubmit,\r\n    handleReset: formik.handleReset,\r\n  });\r\n};\r\nChannelDetailsForm.displayName = 'ChannelDetailsForm';\r\nChannelDetailsForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  initialValues: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    key: PropTypes.string,\r\n    name: PropTypes.object,\r\n    version: PropTypes.number,\r\n    roles: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  }),\r\n  isReadOnly: PropTypes.bool.isRequired,\r\n  dataLocale: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ChannelDetailsForm;\r\n ","import omitEmpty from 'omit-empty-es';\r\n\r\nconst DUPLICATE_FIELD_ERROR_CODE = 'DuplicateField';\r\n\r\n/**\r\n * TransformedErrors: { unmappedErrors: [], formErrors: {} }\r\n *\r\n * @param  Object graphqlError\r\n * @return Object TransformedErrors\r\n */\r\n\r\nexport const transformErrors = (graphQlErrors) => {\r\n  const errorsToMap = Array.isArray(graphQlErrors)\r\n    ? graphQlErrors\r\n    : [graphQlErrors];\r\n\r\n  const { formErrors, unmappedErrors } = errorsToMap.reduce(\r\n    (transformedErrors, graphQlError) => {\r\n      const errorCode = graphQlError?.extensions?.code ?? graphQlError.code;\r\n      const fieldName = graphQlError?.extensions?.field ?? graphQlError.field;\r\n\r\n      if (errorCode === DUPLICATE_FIELD_ERROR_CODE) {\r\n        transformedErrors.formErrors[fieldName] = { duplicate: true };\r\n      } else {\r\n        transformedErrors.unmappedErrors.push(graphQlError);\r\n      }\r\n      return transformedErrors;\r\n    },\r\n    {\r\n      formErrors: {}, // will be mappped to form field error messages\r\n      unmappedErrors: [], // will result in dispatching `showApiErrorNotification`\r\n    }\r\n  );\r\n\r\n  return {\r\n    formErrors: omitEmpty(formErrors),\r\n    unmappedErrors,\r\n  };\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useIntl } from 'react-intl';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  PageNotFound,\r\n  FormModalPage,\r\n} from '@commercetools-frontend/application-components';\r\nimport { ContentNotification } from '@commercetools-uikit/notifications';\r\nimport Text from '@commercetools-uikit/text';\r\nimport Spacings from '@commercetools-uikit/spacings';\r\nimport LoadingSpinner from '@commercetools-uikit/loading-spinner';\r\nimport { useCallback } from 'react';\r\nimport { useApplicationContext } from '@commercetools-frontend/application-shell-connectors';\r\nimport { formatLocalizedString } from '@commercetools-frontend/l10n';\r\nimport { DOMAINS, NO_VALUE_FALLBACK } from '@commercetools-frontend/constants';\r\nimport { useIsAuthorized } from '@commercetools-frontend/permissions';\r\nimport {\r\n  useShowNotification,\r\n  useShowApiErrorNotification,\r\n} from '@commercetools-frontend/actions-global';\r\nimport { PERMISSIONS } from '../../constants';\r\nimport {\r\n  useChannelDetailsUpdater,\r\n  useChannelDetailsFetcher,\r\n} from '../../hooks/use-channels-connector';\r\nimport { docToFormValues, formValuesToDoc } from './conversions';\r\nimport ChannelsDetailsForm from './channel-details-form';\r\nimport { transformErrors } from './transform-errors';\r\nimport messages from './messages';\r\nimport { ApplicationPageTitle } from '@commercetools-frontend/application-shell';\r\n\r\nconst ChannelDetails = (props) => {\r\n  const intl = useIntl();\r\n  const params = useParams();\r\n  const { loading, error, channel } = useChannelDetailsFetcher(params.id);\r\n  const { dataLocale, projectLanguages } = useApplicationContext((context) => ({\r\n    dataLocale: context.dataLocale ?? '',\r\n    projectLanguages: context.project?.languages ?? [],\r\n  }));\r\n  const canManage = useIsAuthorized({\r\n    demandedPermissions: [PERMISSIONS.Manage],\r\n  });\r\n  const showNotification = useShowNotification();\r\n  const showApiErrorNotification = useShowApiErrorNotification();\r\n  const channelDetailsUpdater = useChannelDetailsUpdater();\r\n  const handleSubmit = useCallback(\r\n    async (formikValues, formikHelpers) => {\r\n      const data = formValuesToDoc(formikValues);\r\n      try {\r\n        await channelDetailsUpdater.execute({\r\n          originalDraft: channel,\r\n          nextDraft: data,\r\n        });\r\n        showNotification({\r\n          kind: 'success',\r\n          domain: DOMAINS.SIDE,\r\n          text: intl.formatMessage(messages.channelUpdated, {\r\n            channelName: formatLocalizedString(formikValues, {\r\n              key: 'name',\r\n              locale: dataLocale,\r\n              fallbackOrder: projectLanguages,\r\n            }),\r\n          }),\r\n        });\r\n      } catch (graphQLErrors) {\r\n        const transformedErrors = transformErrors(graphQLErrors);\r\n        if (transformedErrors.unmappedErrors.length > 0) {\r\n          showApiErrorNotification({\r\n            errors: transformedErrors.unmappedErrors,\r\n          });\r\n        }\r\n\r\n        formikHelpers.setErrors(transformedErrors.formErrors);\r\n      }\r\n    },\r\n    [\r\n      channel,\r\n      channelDetailsUpdater,\r\n      dataLocale,\r\n      intl,\r\n      projectLanguages,\r\n      showApiErrorNotification,\r\n      showNotification,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <ChannelsDetailsForm\r\n      initialValues={docToFormValues(channel, projectLanguages)}\r\n      onSubmit={handleSubmit}\r\n      isReadOnly={!canManage}\r\n      dataLocale={dataLocale}\r\n    >\r\n      {(formProps) => {\r\n        const channelName = formatLocalizedString(\r\n          {\r\n            name: formProps.values?.name,\r\n          },\r\n          {\r\n            key: 'name',\r\n            locale: dataLocale,\r\n            fallbackOrder: projectLanguages,\r\n            fallback: NO_VALUE_FALLBACK,\r\n          }\r\n        );\r\n        return (\r\n          <FormModalPage\r\n            title={channelName}\r\n            isOpen\r\n            onClose={props.onClose}\r\n            isPrimaryButtonDisabled={\r\n              formProps.isSubmitting || !formProps.isDirty || !canManage\r\n            }\r\n            isSecondaryButtonDisabled={!formProps.isDirty}\r\n            onSecondaryButtonClick={formProps.handleReset}\r\n            onPrimaryButtonClick={formProps.submitForm}\r\n            labelPrimaryButton={FormModalPage.Intl.save}\r\n            labelSecondaryButton={FormModalPage.Intl.revert}\r\n          >\r\n            {loading && (\r\n              <Spacings.Stack alignItems=\"center\">\r\n                <LoadingSpinner />\r\n              </Spacings.Stack>\r\n            )}\r\n            {error && (\r\n              <ContentNotification type=\"error\">\r\n                <Text.Body>\r\n                  {intl.formatMessage(messages.channelDetailsErrorMessage)}\r\n                </Text.Body>\r\n              </ContentNotification>\r\n            )}\r\n            {channel && formProps.formElements}\r\n            {channel && (\r\n              <ApplicationPageTitle additionalParts={[channelName]} />\r\n            )}\r\n            {channel === null && <PageNotFound />}\r\n          </FormModalPage>\r\n        );\r\n      }}\r\n    </ChannelsDetailsForm>\r\n  );\r\n};\r\nChannelDetails.displayName = 'ChannelDetails';\r\nChannelDetails.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ChannelDetails;\r\n"],"names":["PERMISSIONS","entryPointUriPathToPermissionKeys","docToFormValues","channel","languages","key","roles","venues","deliveryCountries","name","LocalizedTextInput","transformLocalizedFieldToLocalizedString","nameAllLocales","formValuesToDoc","formValues","CHANNEL_ROLES","inventorySupply","productDistribution","orderExport","orderImport","primary","CHANNEL_Venues","atlantis","atthetop","ferrariWorld","warnerBros","CHANNEL_DeliveryCountries","afganistan","india","france","canada","CHANNEL_CategoryName","man","women","top","shoes","CHANNEL_CategoryID","newshows","oldshoes","brandnew","newarrivals","validate","formikValues","errors","TextInput","missing","length","omitEmpty","defineMessages","backToChannelsList","id","defaultMessage","duplicateKey","channelUpdated","channelKeyLabel","channelNameLabel","channelRolesLabel","channelVenuesLabel","channelDeliveryCountriesLabel","channelCategoryNameLabel","channelCategoryIDLabel","hint","modalTitle","channelDetailsErrorMessage","getRoleOptions","label","value","getVenuesOptions","getDeliveryCountriesOptions","getCategoryNameOptions","getCategoryIDOptions","ChannelDetailsForm","props","intl","useIntl","formik","useFormik","initialValues","onSubmit","enableReinitialize","formElements","scale","title","formatMessage","messages","touched","onChange","handleChange","onBlur","handleBlur","isReadOnly","renderError","errorKey","isRequired","horizontalConstraint","Boolean","selectedLanguage","dataLocale","isMulti","options","categoryName","categoryID","children","values","isDirty","dirty","isSubmitting","submitForm","handleSubmit","handleReset","displayName","transformErrors","graphQlErrors","errorsToMap","transformedErrors","graphQlError","errorCode","extensions","code","fieldName","field","formErrors","duplicate","unmappedErrors","push","ChannelDetails","params","useParams","useChannelDetailsFetcher","loading","error","useApplicationContext","context","projectLanguages","project","canManage","useIsAuthorized","demandedPermissions","Manage","showNotification","useShowNotification","showApiErrorNotification","useShowApiErrorNotification","channelDetailsUpdater","useChannelDetailsUpdater","useCallback","formikHelpers","data","execute","originalDraft","nextDraft","kind","domain","DOMAINS","text","channelName","formatLocalizedString","locale","fallbackOrder","setErrors","formProps","fallback","NO_VALUE_FALLBACK","isOpen","onClose","isPrimaryButtonDisabled","isSecondaryButtonDisabled","onSecondaryButtonClick","onPrimaryButtonClick","labelPrimaryButton","FormModalPage","labelSecondaryButton","alignItems","type","additionalParts"],"sourceRoot":""}